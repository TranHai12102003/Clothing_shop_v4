@model Clothing_shop_v2.Common.Models.PaginationModel<Clothing_shop_v2.VModels.BannerGetVModel>

@{
    ViewData["Title"] = "Danh sách Banner";
    Layout = "_LayoutAdmin";
}

<div class="card-body">
    <!-- Hiển thị thông báo thành công hoặc lỗi -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="header">
        <h1>Danh sách Banner</h1>
        <span class="results">@Model.TotalRecords/@Model.TotalRecords kết quả</span>
    </div>

    <div class="actions">
        <a asp-action="Create" class="btn create-btn"><i class="fas fa-plus"></i> TẠO MỚI</a>
    </div>

    <div class="search-bar">
        <form asp-action="Index" method="get" class="search-form">
            <div class="input-group">
                <input type="text" name="searchString" class="search-input" placeholder="Tìm kiếm banner..." value="@Context.Request.Query["SearchString"]">
                <button type="submit" class="search-btn"><i class="fas fa-search fa-sm"></i></button>
            </div>
        </form>
    </div>

    <!-- Bao bọc bảng trong một div để thêm thanh cuộn ngang -->
    <div class="table-wrapper">
        <table class="table-custom">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Tên Banner</th>
                    <th>Ảnh</th>
                    <th>Mô tả</th>
                    <th>Đường dẫn</th>
                    <th>Tên danh mục</th>
                    <th>Tên sản phẩm</th>
                    <th>Tên khuyến mãi</th>
                    <th>Ngày bắt đầu</th>
                    <th>Ngày kết thúc</th>
                    <th>Thứ tự hiển thị</th>
                    <th>Trạng thái</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var banner in Model.Records)
                {
                    <tr>
                        <td>@banner.Id</td>
                        <td>@banner.BannerName</td>
                        <td>
                            @if (!string.IsNullOrEmpty(banner.ImageUrl))
                            {
                                <img class="rounded" width="100" height="100" src="@banner.ImageUrl" />
                            }
                        </td>
                        <td>@banner.Description</td>
                        <td>@banner.LinkUrl</td>
                        <td>@banner.Category?.Name</td>
                        <td>@banner.Product?.Name</td>
                        <td>@banner.Promotion?.Name</td>
                        <td>@banner.StartDate</td>
                        <td>@banner.EndDate</td>
                        <td>@banner.DisplayOrder</td>
                        <td class="text-center">
                            <form asp-action="ToggleActive" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@banner.Id" />
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" name="isActive" value="true" @(banner.IsActive ==true ? "checked" : "") onchange="this.form.submit()">
                                </div>
                            </form>
                        </td>
                        <td class="actions-cell">
                            <a asp-action="Update" asp-route-id="@banner.Id" class="btn action-btn">✏️</a>
                            <button type="button" class="btn action-btn status" data-bs-toggle="modal" data-bs-target="#deleteModal-@banner.Id">✖️</button>

                            <!-- Delete Modal -->
                            <div class="modal fade" id="deleteModal-@banner.Id" tabindex="-1">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header bg-danger text-white">
                                            <h5 class="modal-title">Xác nhận xóa</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                        </div>
                                        <div class="modal-body">
                                            Bạn chắc chắn muốn xóa banner "@banner.BannerName"?
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                                            <form asp-action="Delete" method="post">
                                                <input type="hidden" name="id" value="@banner.Id" />
                                                <button type="submit" class="btn btn-danger">Xác nhận xóa</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Phân trang -->
    <<!-- Phân trang -->
    <div class="pagination">
        <span>Rows per page:</span>
        <form asp-action="Index" method="get" class="d-inline">
            <input type="hidden" name="searchString" value="@Context.Request.Query["searchString"]" />
            <input type="hidden" name="pageNumber" value="1" />
            <select name="pageSize" onchange="this.form.submit()">
                @{
                    var pageSizes = new[] { 5, 10, 15 };
                    foreach (var size in pageSizes)
                    {
                        if (size == Model.PageSize)
                        {
                            <option value="@size" selected>@size</option>
                        }
                        else
                        {
                            <option value="@size">@size</option>
                        }
                    }
                }
            </select>
        </form>
        <span>@((Model.CurrentPage - 1) * Model.PageSize + 1)-@(Model.CurrentPage * Model.PageSize > Model.TotalRecords ? Model.TotalRecords : Model.CurrentPage * Model.PageSize) of @Model.TotalRecords</span>
        <a class="page-btn @(Model.CurrentPage == 1 ? "disabled" : "")" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@Context.Request.Query["SearchString"]"><</a>
        <a class="page-btn @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchString="@Context.Request.Query["SearchString"]">></a>
    </div>
</div>

<style>
    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

        .header h1 {
            font-size: 24px;
            margin: 0;
        }

        .header .results {
            font-size: 14px;
            color: #888;
        }

    .actions {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }

        .actions .create-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 20px;
            background-color: #007bff;
            color: white;
            font-size: 14px;
            font-weight: bold;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            transition: transform 0.1s ease;
            text-decoration: none;
        }

            .actions .create-btn:hover {
                transform: translateY(-2px);
            }

    .search-bar {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 20px;
    }

        .search-bar .search-form {
            display: flex;
            align-items: center;
            gap: 10px;
            width: 100%;
        }

        .search-bar .input-group {
            display: flex;
            align-items: center;
            width: 100%;
            gap: 10px;
        }

        .search-bar .search-input {
            padding: 10px 20px;
            border: none;
            border-radius: 20px;
            flex-grow: 1;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            font-size: 14px;
            color: #888;
        }

        .search-bar .search-btn, .search-bar .clear-filter-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 20px;
            background-color: #f0f0f0;
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            font-size: 14px;
            font-weight: bold;
            transition: transform 0.1s ease;
            text-decoration: none;
        }

            .search-bar .search-btn:hover, .search-bar .clear-filter-btn:hover {
                transform: translateY(-2px);
            }

        .search-bar .search-btn {
            background-color: #007bff;
            color: white;
        }

    /* Thêm thanh cuộn ngang cho bảng */
    .table-wrapper {
        overflow-x: auto; /* Kích hoạt thanh cuộn ngang */
        width: 100%;
        -webkit-overflow-scrolling: touch; /* Cải thiện cuộn trên thiết bị di động */
    }

    .table-custom {
        width: 100%;
        min-width: 1200px; /* Đặt chiều rộng tối thiểu để đảm bảo tất cả cột hiển thị đầy đủ */
        border-collapse: collapse;
        background-color: #fff;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

        .table-custom th, .table-custom td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
            white-space: nowrap; /* Ngăn nội dung xuống dòng */
        }

        .table-custom th {
            background-color: #f9f9f9;
            font-weight: bold;
        }

        .table-custom .badge {
            font-size: 12px;
            padding: 5px 10px;
        }

    .actions-cell .action-btn {
        border: none;
        background: none;
        cursor: pointer;
        margin-right: 5px;
        font-size: 16px;
    }

    .actions-cell .status {
        color: #ff0000;
        font-weight: bold;
    }

    .pagination {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        margin-top: 20px;
        gap: 10px;
    }

        .pagination select {
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .pagination span {
            font-size: 14px;
            color: #888;
        }

        .pagination .page-btn {
            padding: 5px 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #007bff;
            color: white;
            text-decoration: none;
            cursor: pointer;
        }

            .pagination .page-btn.disabled {
                background-color: #ccc;
                cursor: not-allowed;
            }
</style>