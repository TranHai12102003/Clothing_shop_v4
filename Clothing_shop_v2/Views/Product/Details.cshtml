@model Clothing_shop_v2.Models.Product

@{
    ViewData["Title"] = "Chi tiết sản phẩm";
    Layout = "_LayoutAdmin";
}

<div class="container">
    <!-- Thông tin sản phẩm -->
    <div class="section-wrapper">
        <div class="header">
            <h1>Thông tin sản phẩm</h1>
        </div>
        <div class="content">
            <div class="row">
                <!-- Cột hiển thị ảnh -->
                <div class="col-md-4">
                    <p><strong>Ảnh chính:</strong></p>
                    @{
                        var primaryImage = Model.ProductImages?.FirstOrDefault(pi => pi.IsPrimary) ?? Model.ProductImages?.FirstOrDefault();
                        if (primaryImage != null && !string.IsNullOrEmpty(primaryImage.ImageUrl))
                        {
                            <img src="@primaryImage.ImageUrl" alt="@Model.ProductName" class="product-image mb-3" loading="lazy" />
                        }
                        else
                        {
                            <span class="text-muted">Không có ảnh</span>
                        }
                    }
                </div>
                <!-- Cột hiển thị thông tin -->
                <div class="col-md-8">
                    <p><strong>Tên sản phẩm:</strong> @Model.ProductName</p>
                    <p><strong>Danh mục:</strong> @(Model.Category?.CategoryName ?? "-")</p>
                    <p><strong>Ngày tạo:</strong> @Model.CreatedDate?.ToString("dd/MM/yyyy HH:mm")</p>
                    <p><strong>Ngày cập nhật:</strong> @(Model.UpdatedDate?.ToString("dd/MM/yyyy HH:mm") ?? "-")</p>
                    <p><strong>Mô tả:</strong></p>
                    <div class="description-content">@Html.Raw(Model.Description)</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Danh sách biến thể -->
    <div class="section-wrapper">
        <div class="header">
            <h1>Danh sách biến thể</h1>
            <span class="results">@(Model.Variants?.Count() ?? 0)/@(Model.Variants?.Count() ?? 0) kết quả</span>
        </div>
        <div class="content">
            <div class="table-wrapper">
                <div class="variant-message" style="display: none;"></div>
                <table class="table-custom" data-product-id="@Model.Id">
                    <thead>
                        <tr>
                            <th>Kích thước</th>
                            <th>Màu sắc</th>
                            <th>Giá</th>
                            <th>Giá khuyến mãi</th>
                            <th>Số lượng tồn</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Variants != null && Model.Variants.Any())
                        {
                            foreach (var variant in Model.Variants)
                            {
                                <tr data-variant-id="@variant.Id">
                                    <td>@(variant.Size?.SizeName ?? "-")</td>
                                    <td>@(variant.Color?.ColorName ?? "-")</td>
                                    <td>@variant.Price.ToString("N0")</td>
                                    <td>@(variant.SalePrice.HasValue ? variant.SalePrice.Value.ToString("N0") : "-")</td>
                                    <td>@variant.QuantityInStock</td>
                                    <td class="actions-cell">
                                        <button type="button" class="btn action-btn edit-variant-btn" title="Chỉnh sửa">✏️</button>
                                        <button type="button" class="btn action-btn status delete-variant-btn" title="Xóa">✖️</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center text-muted">Không có biến thể nào.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Form thêm biến thể -->
    <div class="section-wrapper">
        <div class="header">
            <h1>Thêm biến thể mới</h1>
        </div>
        <div class="content">
            <div id="variant-error" class="variant-error" style="display: none;"></div>
            <form class="add-variant-form" data-product-id="@Model.Id">
                @Html.AntiForgeryToken()
                <input type="hidden" name="ProductId" value="@Model.Id" />
                <div class="row g-3">
                    <!-- Kích thước -->
                    <div class="col-md-6 col-lg-4">
                        <label for="SizeId" class="form-label fw-medium">Kích thước <span class="text-danger">*</span></label>
                        <select id="SizeId" name="SizeId" class="form-input">
                            <option value="">Chọn kích thước</option>
                            @foreach (var size in ViewBag.Sizes)
                            {
                                <option value="@size.Id">@size.SizeName</option>
                            }
                        </select>
                    </div>
                    <!-- Màu sắc -->
                    <div class="col-md-6 col-lg-4">
                        <label for="ColorId" class="form-label fw-medium">Màu sắc <span class="text-danger">*</span></label>
                        <select id="ColorId" name="ColorId" class="form-input">
                            <option value="">Chọn màu sắc</option>
                            @foreach (var color in ViewBag.Colors)
                            {
                                <option value="@color.Id">@color.ColorName</option>
                            }
                        </select>
                    </div>
                    <!-- Giá -->
                    <div class="col-md-6 col-lg-4">
                        <label for="Price" class="form-label fw-medium">Giá <span class="text-danger">*</span></label>
                        <input type="number" id="Price" name="Price" class="form-input" step="0.01" min="0" />
                    </div>
                    <!-- Giá khuyến mãi -->
                    <div class="col-md-6 col-lg-4">
                        <label for="SalePrice" class="form-label fw-medium">Giá khuyến mãi</label>
                        <input type="number" id="SalePrice" name="SalePrice" class="form-input" step="0.01" min="0" />
                    </div>
                    <!-- Số lượng tồn -->
                    <div class="col-md-6 col-lg-4">
                        <label for="QuantityInStock" class="form-label fw-medium">Số lượng tồn <span class="text-danger">*</span></label>
                        <input type="number" id="QuantityInStock" name="QuantityInStock" class="form-input" min="0" />
                    </div>
                    <!-- Nút Thêm -->
                    <div class="col-12 col-lg-4 d-flex align-items-end">
                        <button type="submit" class="btn create-btn w-100 py-2">
                            <i class="fas fa-plus me-2"></i>Thêm biến thể
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Modal chỉnh sửa biến thể -->
    <div class="modal fade" id="editVariantModal" tabindex="-1" aria-labelledby="editVariantModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-warning text-white">
                    <h5 class="modal-title" id="editVariantModalLabel">Chỉnh sửa biến thể</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="edit-variant-error" class="variant-error" style="display: none;"></div>
                    <form class="edit-variant-form">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="Id" />
                        <input type="hidden" name="ProductId" value="@Model.Id" />
                        <div class="mb-3">
                            <label class="form-label">Kích thước <span class="text-danger">*</span></label>
                            <select name="SizeId" class="form-input" required>
                                <option value="">Chọn kích thước</option>
                                @foreach (var size in ViewBag.Sizes)
                                {
                                    <option value="@size.Id">@size.SizeName</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Màu sắc <span class="text-danger">*</span></label>
                            <select name="ColorId" class="form-input" required>
                                <option value="">Chọn màu sắc</option>
                                @foreach (var color in ViewBag.Colors)
                                {
                                    <option value="@color.Id">@color.ColorName</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Giá <span class="text-danger">*</span></label>
                            <input type="number" name="Price" class="form-input" step="0.01" min="0" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Giá khuyến mãi</label>
                            <input type="number" name="SalePrice" class="form-input" step="0.01" min="0" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Số lượng tồn <span class="text-danger">*</span></label>
                            <input type="number" name="QuantityInStock" class="form-input" min="0" required />
                        </div>
                        <button type="submit" class="btn create-btn w-100">Cập nhật</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal xác nhận xóa biến thể -->
    <div class="modal fade" id="deleteVariantModal" tabindex="-1" aria-labelledby="deleteVariantModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteVariantModalLabel">Xác nhận xóa biến thể</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Bạn có chắc chắn muốn xóa biến thể này?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-danger confirm-delete-variant">Xác nhận xóa</button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .container {
        padding: 20px;
    }

    .section-wrapper {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        padding: 20px;
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

        .header h1 {
            font-size: 24px;
            margin: 0;
        }

        .header .results {
            font-size: 14px;
            color: #888;
        }

    .content {
        padding: 0;
    }

    .product-image {
        width: 100%;
        max-width: 150px;
        height: auto;
        object-fit: cover;
        border-radius: 4px;
        border: 1px solid #dee2e6;
    }

    .description-content {
        font-size: 14px;
        color: #333;
    }

        .description-content img {
            max-width: 100px;
            max-height: 60px;
            object-fit: cover;
            border-radius: 4px;
        }

    .table-wrapper {
        overflow-x: auto;
        width: 100%;
        -webkit-overflow-scrolling: touch;
    }

    .table-custom {
        width: 100%;
        min-width: 800px;
        border-collapse: collapse;
        background-color: #fff;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

        .table-custom th,
        .table-custom td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
            white-space: nowrap;
        }

        .table-custom th {
            background-color: #f9f9f9;
            font-weight: bold;
        }

    .actions-cell .action-btn {
        border: none;
        background: none;
        cursor: pointer;
        margin-right: 5px;
        font-size: 16px;
    }

    .actions-cell .status {
        color: #ff0000;
        font-weight: bold;
    }

    .add-variant-form .form-label {
        font-size: 0.95rem;
        color: #343a40;
        margin-bottom: 0.5rem;
    }

    .add-variant-form .form-input,
    .edit-variant-form .form-input {
        padding: 10px 20px;
        border: none;
        border-radius: 20px;
        width: 100%;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        font-size: 14px;
        color: #333;
    }

        .add-variant-form .form-input:focus,
        .edit-variant-form .form-input:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
        }

    .add-variant-form .create-btn,
    .edit-variant-form .create-btn {
        padding: 10px 20px;
        border: none;
        border-radius: 20px;
        background-color: #007bff;
        color: white;
        font-size: 14px;
        font-weight: bold;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: transform 0.1s ease;
        text-decoration: none;
    }

        .add-variant-form .create-btn:hover,
        .edit-variant-form .create-btn:hover {
            transform: translateY(-2px);
        }

    .variant-error,
    .variant-message {
        margin-bottom: 15px;
    }

        .variant-error .alert,
        .variant-message .alert {
            border-radius: 6px;
            font-size: 0.95rem;
            padding: 12px 20px;
            margin-bottom: 5px;
        }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
    }

    /* Responsive */
    @@media screen and (max-width: 768px) {
        .header {
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
        }

        .product-image {
            max-width: 120px;
        }

        .description-content img {
            max-width: 80px;
            max-height: 40px;
        }

        .table-custom th,
        .table-custom td {
            padding: 8px;
            font-size: 0.9rem;
        }

        .add-variant-form .form-label,
        .edit-variant-form .form-label {
            font-size: 0.9rem;
        }

        .add-variant-form .form-input,
        .edit-variant-form .form-input {
            padding: 8px 16px;
            font-size: 0.9rem;
        }

        .add-variant-form .create-btn,
        .edit-variant-form .create-btn {
            font-size: 0.9rem;
            padding: 8px 16px;
        }
    }

    @@media screen and (max-width: 576px) {
        .product-image {
            max-width: 100px;
        }

        .add-variant-form .form-label,
        .edit-variant-form .form-label {
            font-size: 0.85rem;
        }

        .add-variant-form .form-input,
        .edit-variant-form .form-input {
            font-size: 0.85rem;
        }

        .add-variant-form .create-btn,
        .edit-variant-form .create-btn {
            font-size: 0.85rem;
        }
    }
</style>

@section Scripts {
    <script>
        const sizes = @Json.Serialize(ViewBag.Sizes);
        const colors = @Json.Serialize(ViewBag.Colors);

        function getSizeName(sizeId) {
            const size = sizes.find(s => s.id === parseInt(sizeId));
            return size ? size.sizeName : '-';
        }

        function getColorName(colorId) {
            const color = colors.find(c => c.id === parseInt(colorId));
            return color ? color.colorName : '-';
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Tự động ẩn thông báo
            document.querySelectorAll('.alert').forEach(alert => {
                setTimeout(() => {
                    const alertInstance = bootstrap.Alert.getOrCreateInstance(alert);
                    if (alertInstance) alertInstance.close();
                    else alert.remove();
                }, 3000);
            });

            // Thêm biến thể
            document.querySelector('.add-variant-form').addEventListener('submit', async e => {
                e.preventDefault();
                const productId = e.target.getAttribute('data-product-id');
                const table = document.querySelector(`.table-custom[data-product-id="${productId}"] tbody`);
                const errorDiv = document.getElementById('variant-error');
                const btn = e.target.querySelector('button[type="submit"]');
                btn.disabled = true;
                btn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang thêm...';
                errorDiv.style.display = 'none';
                errorDiv.innerHTML = '';

                try {
                    const response = await fetch('/Variant/AddVariant', {
                        method: 'POST',
                        body: new FormData(e.target),
                        headers: { 'X-Requested-With': 'XMLHttpRequest' }
                    });
                    const data = await response.json();
                    if (data.success) {
                        const v = data.variant;
                        const row = `<tr data-variant-id="${v.id}">
                            <td>${getSizeName(v.sizeId)}</td>
                            <td>${getColorName(v.colorId)}</td>
                            <td>${parseFloat(v.price).toLocaleString('vi-VN')}</td>
                            <td>${v.salePrice ? parseFloat(v.salePrice).toLocaleString('vi-VN') : '-'}</td>
                            <td>${v.quantityInStock}</td>
                            <td class="actions-cell">
                                <button type="button" class="btn action-btn edit-variant-btn" title="Chỉnh sửa">✏️</button>
                                <button type="button" class="btn action-btn status delete-variant-btn" title="Xóa">✖️</button>
                            </td>
                        </tr>`;
                        table.querySelector('tr td[colspan="6"]') ? table.innerHTML = row : table.insertAdjacentHTML('beforeend', row);
                        errorDiv.style.display = 'block';
                        errorDiv.innerHTML = `<div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>${data.message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>`;
                        e.target.reset();
                    } else {
                        errorDiv.style.display = 'block';
                        errorDiv.innerHTML = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle me-2"></i>${data.message || 'Có lỗi xảy ra.'}
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>`;
                        if (data.errors) {
                            data.errors.forEach(error => {
                                errorDiv.innerHTML += `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                                    <i class="fas fa-exclamation-circle me-2"></i>${error}
                                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                                </div>`;
                            });
                        }
                    }
                } catch (error) {
                    errorDiv.style.display = 'block';
                    errorDiv.innerHTML = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>Đã có lỗi xảy ra.
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>`;
                } finally {
                    btn.disabled = false;
                    btn.innerHTML = '<i class="fas fa-plus me-2"></i>Thêm biến thể';
                }
            });

            // Chỉnh sửa biến thể
            document.addEventListener('click', e => {
                if (e.target.closest('.edit-variant-btn')) {
                    const row = e.target.closest('tr');
                    const modal = document.getElementById('editVariantModal');
                    const form = modal.querySelector('.edit-variant-form');
                    const errorDiv = document.getElementById('edit-variant-error');
                    errorDiv.style.display = 'none';
                    errorDiv.innerHTML = '';
                    form.querySelector('input[name="Id"]').value = row.getAttribute('data-variant-id');
                    form.querySelector('select[name="SizeId"]').value = [...form.querySelectorAll('select[name="SizeId"] option')]
                        .find(opt => opt.textContent === row.cells[0].textContent)?.value || '';
                    form.querySelector('select[name="ColorId"]').value = [...form.querySelectorAll('select[name="ColorId"] option')]
                        .find(opt => opt.textContent === row.cells[1].textContent)?.value || '';
                    form.querySelector('input[name="Price"]').value = row.cells[2].textContent.replace(/[^0-9.-]+/g, '');
                    form.querySelector('input[name="SalePrice"]').value = row.cells[3].textContent === '-' ? '' : row.cells[3].textContent.replace(/[^0-9.-]+/g, '');
                    form.querySelector('input[name="QuantityInStock"]').value = row.cells[4].textContent;
                    bootstrap.Modal.getOrCreateInstance(modal).show();
                }
            });

            // Xử lý form chỉnh sửa
            document.querySelector('.edit-variant-form').addEventListener('submit', async e => {
                e.preventDefault();
                const btn = e.target.querySelector('button[type="submit"]');
                const errorDiv = document.getElementById('edit-variant-error');
                btn.disabled = true;
                btn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang cập nhật...';
                errorDiv.style.display = 'none';
                errorDiv.innerHTML = '';

                try {
                    const response = await fetch('/Variant/UpdateVariant', {
                        method: 'POST',
                        body: new FormData(e.target),
                        headers: { 'X-Requested-With': 'XMLHttpRequest' }
                    });
                    const data = await response.json();
                    if (data.success) {
                        const v = data.variant;
                        const row = document.querySelector(`tr[data-variant-id="${v.id}"]`);
                        row.cells[0].textContent = getSizeName(v.sizeId);
                        row.cells[1].textContent = getColorName(v.colorId);
                        row.cells[2].textContent = parseFloat(v.price).toLocaleString('vi-VN');
                        row.cells[3].textContent = v.salePrice ? parseFloat(v.salePrice).toLocaleString('vi-VN') : '-';
                        row.cells[4].textContent = v.quantityInStock;
                        errorDiv.style.display = 'block';
                        errorDiv.innerHTML = `<div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>${data.message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>`;
                        bootstrap.Modal.getOrCreateInstance(document.getElementById('editVariantModal')).hide();
                    } else {
                        errorDiv.style.display = 'block';
                        errorDiv.innerHTML = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle me-2"></i>${data.message || 'Có lỗi xảy ra.'}
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>`;
                        if (data.errors) {
                            data.errors.forEach(error => {
                                errorDiv.innerHTML += `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                                    <i class="fas fa-exclamation-circle me-2"></i>${error}
                                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                                </div>`;
                            });
                        }
                    }
                } catch (error) {
                    errorDiv.style.display = 'block';
                    errorDiv.innerHTML = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>Đã có lỗi xảy ra.
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>`;
                } finally {
                    btn.disabled = false;
                    btn.innerHTML = 'Cập nhật';
                }
            });

            // Xóa biến thể
            document.addEventListener('click', e => {
                if (e.target.closest('.delete-variant-btn')) {
                    const row = e.target.closest('tr');
                    const modal = document.getElementById('deleteVariantModal');
                    modal.querySelector('.confirm-delete-variant').setAttribute('data-variant-id', row.getAttribute('data-variant-id'));
                    bootstrap.Modal.getOrCreateInstance(modal).show();
                }
            });

            // Xác nhận xóa
            document.querySelector('.confirm-delete-variant').addEventListener('click', async function () {
                const variantId = this.getAttribute('data-variant-id');
                const row = document.querySelector(`tr[data-variant-id="${variantId}"]`);
                const table = row.closest('tbody');
                const modal = document.getElementById('deleteVariantModal');
                const tableContainer = row.closest('.table-wrapper');
                let variantMessageDiv = tableContainer.querySelector('.variant-message');
                if (!variantMessageDiv) {
                    variantMessageDiv = document.createElement('div');
                    variantMessageDiv.className = 'variant-message';
                    tableContainer.insertBefore(variantMessageDiv, tableContainer.querySelector('table'));
                }
                this.disabled = true;
                this.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang xóa...';

                try {
                    const response = await fetch('/Variant/DeleteVariant', {
                        method: 'POST',
                        body: new URLSearchParams({ 'id': variantId, '__RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value }),
                        headers: { 'X-Requested-With': 'XMLHttpRequest', 'Content-Type': 'application/x-www-form-urlencoded' }
                    });
                    const data = await response.json();
                    if (data.success) {
                        row.remove();
                        if (!table.querySelector('tr')) table.innerHTML = '<tr><td colspan="6" class="text-center text-muted">Không có biến thể nào.</td></tr>';
                        variantMessageDiv.style.display = 'block';
                        variantMessageDiv.innerHTML = `<div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>${data.message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>`;
                        bootstrap.Modal.getOrCreateInstance(modal).hide();
                    } else {
                        variantMessageDiv.style.display = 'block';
                        variantMessageDiv.innerHTML = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle me-2"></i>${data.message || 'Có lỗi xảy ra.'}
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>`;
                    }
                } catch (error) {
                    variantMessageDiv.style.display = 'block';
                    variantMessageDiv.innerHTML = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>Đã có lỗi xảy ra.
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>`;
                } finally {
                    this.disabled = false;
                    this.innerHTML = 'Xác nhận xóa';
                }
            });
        });
    </script>
}